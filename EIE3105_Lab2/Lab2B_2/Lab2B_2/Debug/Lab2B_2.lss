
Lab2B_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001aa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000156  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001aa  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001dc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  0000021c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000706  00000000  00000000  0000024c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000626  00000000  00000000  00000952  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000033a  00000000  00000000  00000f78  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000044  00000000  00000000  000012b4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000034c  00000000  00000000  000012f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000005c  00000000  00000000  00001644  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  000016a0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 64 00 	call	0xc8	; 0xc8 <main>
  78:	0c 94 a9 00 	jmp	0x152	; 0x152 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <T1Delay>:
		T1Delay(); //Timer 1, CTC mode (1 sec)
	}
}

void T1Delay(){  
	OCR1A = 15624;  //15,625 - 1  //1 for overflow
  80:	88 e0       	ldi	r24, 0x08	; 8
  82:	9d e3       	ldi	r25, 0x3D	; 61
  84:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
  88:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	TCCR1A = 0x00; //CTC mode
  8c:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
	TCCR1B = 0x0D; //CTC mode, Prescaler 1024
  90:	8d e0       	ldi	r24, 0x0D	; 13
  92:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	while((TIFR1 & (1<<OCF1A))==0);
  96:	b1 9b       	sbis	0x16, 1	; 22
  98:	fe cf       	rjmp	.-4      	; 0x96 <T1Delay+0x16>
	TCCR1B = 0; //stop timer1
  9a:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	TIFR1 = 0x02;  //OCF0 = 1
  9e:	82 e0       	ldi	r24, 0x02	; 2
  a0:	86 bb       	out	0x16, r24	; 22
  a2:	08 95       	ret

000000a4 <T1Delay_1>:
} 
//Timer value = 16M * 1 / 1024 = 15,625 (delay 1 sec)

void T1Delay_1(){
	OCR1A = 3124;  //3125 - 1  //1 for overflow
  a4:	84 e3       	ldi	r24, 0x34	; 52
  a6:	9c e0       	ldi	r25, 0x0C	; 12
  a8:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
  ac:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	TCCR1A = 0x00; //CTC mode
  b0:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
	TCCR1B = 0x0D; //CTC mode, Prescaler 1024
  b4:	8d e0       	ldi	r24, 0x0D	; 13
  b6:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	while((TIFR1 & (1<<OCF1A))==0);
  ba:	b1 9b       	sbis	0x16, 1	; 22
  bc:	fe cf       	rjmp	.-4      	; 0xba <T1Delay_1+0x16>
	TCCR1B = 0; //stop timer1
  be:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	TIFR1 = 0x02;  //OCF0 = 1
  c2:	82 e0       	ldi	r24, 0x02	; 2
  c4:	86 bb       	out	0x16, r24	; 22
  c6:	08 95       	ret

000000c8 <main>:
void T1Delay();
void T1Delay_1();

int main(){
	unsigned int i;  //for looping
	DDRB = 0xFF; //PORTB output port
  c8:	8f ef       	ldi	r24, 0xFF	; 255
  ca:	84 b9       	out	0x04, r24	; 4
	DDRC = 0xFF; //PORTC output port
  cc:	87 b9       	out	0x07, r24	; 7
	PORTB = 0x00;
  ce:	15 b8       	out	0x05, r1	; 5
	PORTC = 0x00;
  d0:	18 b8       	out	0x08, r1	; 8
	while(1){
		PORTB = 0x21;
  d2:	81 e2       	ldi	r24, 0x21	; 33
  d4:	85 b9       	out	0x05, r24	; 5
		PORTC = 0x10;
  d6:	80 e1       	ldi	r24, 0x10	; 16
  d8:	88 b9       	out	0x08, r24	; 8
		for (i=0; i<5; i++)
  da:	c0 e0       	ldi	r28, 0x00	; 0
  dc:	d0 e0       	ldi	r29, 0x00	; 0
  de:	03 c0       	rjmp	.+6      	; 0xe6 <main+0x1e>
			T1Delay(); //Timer 1, CTC mode (5 sec)
  e0:	0e 94 40 00 	call	0x80	; 0x80 <T1Delay>
	PORTB = 0x00;
	PORTC = 0x00;
	while(1){
		PORTB = 0x21;
		PORTC = 0x10;
		for (i=0; i<5; i++)
  e4:	21 96       	adiw	r28, 0x01	; 1
  e6:	c5 30       	cpi	r28, 0x05	; 5
  e8:	d1 05       	cpc	r29, r1
  ea:	d0 f3       	brcs	.-12     	; 0xe0 <main+0x18>
			T1Delay(); //Timer 1, CTC mode (5 sec)
					

		PORTB = 0x11;
  ec:	81 e1       	ldi	r24, 0x11	; 17
  ee:	85 b9       	out	0x05, r24	; 5
		T1Delay(); //Timer 1, CTC mode (1 sec)
  f0:	0e 94 40 00 	call	0x80	; 0x80 <T1Delay>
		
		PORTB = 0x09;
  f4:	89 e0       	ldi	r24, 0x09	; 9
  f6:	85 b9       	out	0x05, r24	; 5
		T1Delay(); //Timer 1, CTC mode (1 sec)
  f8:	0e 94 40 00 	call	0x80	; 0x80 <T1Delay>
		
		PORTB = 0x0B;
  fc:	8b e0       	ldi	r24, 0x0B	; 11
  fe:	85 b9       	out	0x05, r24	; 5
		T1Delay(); //Timer 1, CTC mode (1 sec)
 100:	0e 94 40 00 	call	0x80	; 0x80 <T1Delay>
			
		PORTB = 0x0C;			
 104:	8c e0       	ldi	r24, 0x0C	; 12
 106:	85 b9       	out	0x05, r24	; 5
		PORTC = 0x20;
 108:	80 e2       	ldi	r24, 0x20	; 32
 10a:	88 b9       	out	0x08, r24	; 8
		for (i=0; i<5; i++)
 10c:	c0 e0       	ldi	r28, 0x00	; 0
 10e:	d0 e0       	ldi	r29, 0x00	; 0
 110:	03 c0       	rjmp	.+6      	; 0x118 <main+0x50>
			T1Delay(); //Timer 1, CTC mode (5 sec)
 112:	0e 94 40 00 	call	0x80	; 0x80 <T1Delay>
		PORTB = 0x0B;
		T1Delay(); //Timer 1, CTC mode (1 sec)
			
		PORTB = 0x0C;			
		PORTC = 0x20;
		for (i=0; i<5; i++)
 116:	21 96       	adiw	r28, 0x01	; 1
 118:	c5 30       	cpi	r28, 0x05	; 5
 11a:	d1 05       	cpc	r29, r1
 11c:	d0 f3       	brcs	.-12     	; 0x112 <main+0x4a>
			T1Delay(); //Timer 1, CTC mode (5 sec)
		
		PORTB = 0x0A;
 11e:	8a e0       	ldi	r24, 0x0A	; 10
 120:	85 b9       	out	0x05, r24	; 5
		for (i=0; i<5; i++)
 122:	c0 e0       	ldi	r28, 0x00	; 0
 124:	d0 e0       	ldi	r29, 0x00	; 0
 126:	07 c0       	rjmp	.+14     	; 0x136 <main+0x6e>
		{
			PORTC = PORTC ^ (1<<PC5); //toggle PORTC.5
 128:	98 b1       	in	r25, 0x08	; 8
 12a:	80 e2       	ldi	r24, 0x20	; 32
 12c:	89 27       	eor	r24, r25
 12e:	88 b9       	out	0x08, r24	; 8
			T1Delay_1(); //Timer 1, CTC mode (0.2 sec)
 130:	0e 94 52 00 	call	0xa4	; 0xa4 <T1Delay_1>
		PORTC = 0x20;
		for (i=0; i<5; i++)
			T1Delay(); //Timer 1, CTC mode (5 sec)
		
		PORTB = 0x0A;
		for (i=0; i<5; i++)
 134:	21 96       	adiw	r28, 0x01	; 1
 136:	c5 30       	cpi	r28, 0x05	; 5
 138:	d1 05       	cpc	r29, r1
 13a:	b0 f3       	brcs	.-20     	; 0x128 <main+0x60>
		{
			PORTC = PORTC ^ (1<<PC5); //toggle PORTC.5
			T1Delay_1(); //Timer 1, CTC mode (0.2 sec)
		}
		
		PORTB = 0x09;
 13c:	89 e0       	ldi	r24, 0x09	; 9
 13e:	85 b9       	out	0x05, r24	; 5
		PORTC = 0x10;
 140:	80 e1       	ldi	r24, 0x10	; 16
 142:	88 b9       	out	0x08, r24	; 8
		T1Delay(); //Timer 1, CTC mode (1 sec)
 144:	0e 94 40 00 	call	0x80	; 0x80 <T1Delay>
		
		PORTB = 0x19;
 148:	89 e1       	ldi	r24, 0x19	; 25
 14a:	85 b9       	out	0x05, r24	; 5
		T1Delay(); //Timer 1, CTC mode (1 sec)
 14c:	0e 94 40 00 	call	0x80	; 0x80 <T1Delay>
	}
 150:	c0 cf       	rjmp	.-128    	; 0xd2 <main+0xa>

00000152 <_exit>:
 152:	f8 94       	cli

00000154 <__stop_program>:
 154:	ff cf       	rjmp	.-2      	; 0x154 <__stop_program>
