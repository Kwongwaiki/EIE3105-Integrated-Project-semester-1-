
Lab2C.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000118  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000c4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000118  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000148  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  00000188  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006d6  00000000  00000000  000001b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000628  00000000  00000000  0000088e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000277  00000000  00000000  00000eb6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000044  00000000  00000000  00001130  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000354  00000000  00000000  00001174  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000020  00000000  00000000  000014c8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 53 00 	call	0xa6	; 0xa6 <main>
  78:	0c 94 60 00 	jmp	0xc0	; 0xc0 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <T1Delay_1>:
		PORTC = PORTC ^ (1<<PC0); //toggle PORTC.0
	}
}

void T1Delay_1(){
	OCR1A = 0x02;  
  80:	82 e0       	ldi	r24, 0x02	; 2
  82:	90 e0       	ldi	r25, 0x00	; 0
  84:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
  88:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	TCCR1A = 0x00; //CTC mode
  8c:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
	TCCR1B = 0x0F; //CTC mode, External clock source on T1 pin. Clock on rising edge
  90:	8f e0       	ldi	r24, 0x0F	; 15
  92:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	while((TIFR1 & (1<<OCF1A))==0);
  96:	b1 9b       	sbis	0x16, 1	; 22
  98:	fe cf       	rjmp	.-4      	; 0x96 <T1Delay_1+0x16>
	TCCR1B = 0; //stop timer1
  9a:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	TIFR1 = 0x02;  //OCF0 = 1
  9e:	82 e0       	ldi	r24, 0x02	; 2
  a0:	86 bb       	out	0x16, r24	; 22
	TIFR1 = (1<<OCF1A);
  a2:	86 bb       	out	0x16, r24	; 22
  a4:	08 95       	ret

000000a6 <main>:
void T1Delay_1();
void T1Delay();

int main(){
	unsigned int state, times;  //for looping
	DDRC = 0xFF; //PORTC output port
  a6:	8f ef       	ldi	r24, 0xFF	; 255
  a8:	87 b9       	out	0x07, r24	; 7
	DDRD = 0x00; //PORTD input port
  aa:	1a b8       	out	0x0a, r1	; 10
	PORTC = 0x00;
  ac:	18 b8       	out	0x08, r1	; 8
	PORTD = 0x10;
  ae:	80 e1       	ldi	r24, 0x10	; 16
  b0:	8b b9       	out	0x0b, r24	; 11
	state = 0;
	times = 0;
	while(1){		
		T1Delay_1();
  b2:	0e 94 40 00 	call	0x80	; 0x80 <T1Delay_1>
		PORTC = PORTC ^ (1<<PC0); //toggle PORTC.0
  b6:	98 b1       	in	r25, 0x08	; 8
  b8:	81 e0       	ldi	r24, 0x01	; 1
  ba:	89 27       	eor	r24, r25
  bc:	88 b9       	out	0x08, r24	; 8
  be:	f9 cf       	rjmp	.-14     	; 0xb2 <main+0xc>

000000c0 <_exit>:
  c0:	f8 94       	cli

000000c2 <__stop_program>:
  c2:	ff cf       	rjmp	.-2      	; 0xc2 <__stop_program>
